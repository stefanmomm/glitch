{"version":3,"sources":["utils/rand.js","Glitch.js","index.js"],"names":["randBetween","min","max","Math","floor","random","MOVEMENT_TYPES","Glitch","props","state","showing","movementType","getMovementType","top","height","glitchStyle","getGlitchStyle","intervals","speed","Object","keys","length","func","time","timeMax","this","push","setInterval","addInterval","setState","UP","blink","bind","forEach","clearInterval","setTimeout","types","background","opacity","backdropFilter","display","left","right","styles","getStyles","className","style","PureComponent","Glitched","glitches","numGlitches","els","key","imageSrc","width","alt","src","getGlitches","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"wOAAMA,G,MAAc,SAACC,EAAKC,GACxB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAM,EAAID,IAAQA,ICIjDK,EAAiB,CACrB,OAAU,SACV,GAAM,KACN,KAAQ,QAGJC,E,YAEJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,SAAS,EACTC,aAAc,EAAKC,kBACnBC,IAAKb,EAAY,EAAGQ,EAAMM,QAC1BA,OAAQd,EAAY,EAAGQ,EAAMM,OAAS,GACtCC,YAAa,EAAKC,kBAGpB,EAAKC,UAAY,GAEjB,EAAKC,MAAQlB,EAAY,EAAG,IAbX,E,+EAiBjB,OAAOmB,OAAOC,KAAKd,GAAgBN,EAAY,EAAGmB,OAAOC,KAAKd,GAAgBe,OAAS,M,kCAG7EC,EAAMC,EAAMC,GACtBC,KAAKR,UAAUS,KAAKC,YAAYL,EAAMtB,EAAYuB,EAAMC,GAAWD,O,0CAGhD,IAAD,OAClBE,KAAKG,aAAY,WACf,EAAKC,SAAS,CACZlB,aAAc,EAAKC,sBAEpB,IAAM,KACTa,KAAKG,aAAY,WACf,IAAIf,EAAM,EAAKJ,MAAMI,IAEjB,EAAKJ,MAAME,eAAiBL,EAAewB,GAC7CjB,GAAO,EACE,EAAKJ,MAAME,eAAiBL,EAAewB,KACpDjB,GAAO,IAGTA,GAAOb,GAAa,EAAG,IAEb,EACRa,EAAM,EAAKL,MAAMM,OACRD,EAAM,EAAKL,MAAMM,SAC1BD,EAAM,GAGR,EAAKgB,SAAS,CAAEhB,UACfY,KAAKP,OAEJlB,EAAY,EAAG,GAAK,GACtByB,KAAKG,YAAYH,KAAKM,MAAMC,KAAKP,MAAO,IAAK,KAG/CA,KAAKG,aAAY,WACf,EAAKC,SAAS,CACZd,YAAa,EAAKC,qBAEnB,IAAM,O,6CAITS,KAAKR,UAAUgB,QAAQC,iB,8BAGhB,IAAD,OACNT,KAAKI,SAAS,CAAEnB,SAAS,IACzByB,YAAW,WACT,EAAKN,SAAS,CAAEnB,SAAS,MACxB,M,uCAIH,IAAM0B,EAAQ,CAAC,CACbC,WAAY,2CACZC,QAAS,IACR,CACDC,eAAgB,aACf,CACDA,eAAgB,cACf,CACDA,eAAgB,sBACf,CACDA,eAAgB,qBACf,CACDA,eAAgB,kBAElB,OAAOH,EAAMpC,EAAY,EAAGoC,EAAMf,OAAS,M,kCAY3C,OARY,aACVmB,QAAUf,KAAKhB,MAAMC,QAAW,QAAU,OAC1CI,OAAO,GAAD,OAAKW,KAAKhB,MAAMK,OAAhB,MACND,IAAI,GAAD,OAAKY,KAAKhB,MAAMI,IAAhB,MACH4B,KAAM,EACNC,MAAO,GACJjB,KAAKhB,MAAMM,e,+BAMhB,IAAM4B,EAASlB,KAAKmB,YACpB,OAAQ,yBACNC,UAAU,SACVC,MAAOH,Q,GA5GQI,iBAsHfC,E,sLAKF,IAFA,IAAIC,EAAWxB,KAAKjB,MAAM0C,YACpBC,EAAM,GACLF,KACLE,EAAIzB,KAAK,kBAAC,EAAD,CAAQ0B,IAAKH,EAAUnC,OAAQW,KAAKjB,MAAMM,UAErD,OAAOqC,I,+BAKP,IAAME,EAAQ,gCAA4B5B,KAAKjB,MAAM8C,MAAvC,YAAgD7B,KAAKjB,MAAMM,QACzE,OACE,yBAAK+B,UAAU,YACb,yBAAKU,IAAI,4DAA4DC,IAAKH,IACzE5B,KAAKgC,mB,GAjBSV,iBA6BvBC,EAASU,aAAe,CACtBR,YAAa,GACbI,MAAO,IACPxC,OAAQ,KAGKkC,QC/JfW,IAASC,OAAO,kBAAC,EAAD,MAAcC,SAASC,eAAe,U","file":"static/js/main.78db0d70.chunk.js","sourcesContent":["const randBetween = (min, max) => {\n  return Math.floor(Math.random() * (max + 1 - min)) + min;\n}\n\nexport {\n  randBetween\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './Glitch.css';\nimport { randBetween } from './utils/rand.js';\n\nconst MOVEMENT_TYPES = {\n  'RANDOM': 'RANDOM',\n  'UP': 'UP',\n  'DOWN': 'DOWN'\n};\n\nclass Glitch extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showing: true,\n      movementType: this.getMovementType(),\n      top: randBetween(0, props.height),\n      height: randBetween(0, props.height / 8),\n      glitchStyle: this.getGlitchStyle()\n    };\n\n    this.intervals = [];\n\n    this.speed = randBetween(1, 10);\n  }\n\n  getMovementType() {\n    return Object.keys(MOVEMENT_TYPES)[randBetween(0, Object.keys(MOVEMENT_TYPES).length - 1)]\n  }\n\n  addInterval(func, time, timeMax) {\n    this.intervals.push(setInterval(func, randBetween(time, timeMax || time)));\n  }\n\n  componentDidMount() {\n    this.addInterval(() => {\n      this.setState({\n        movementType: this.getMovementType()\n      });\n    }, 5000, 10000);\n    this.addInterval(() => {\n      let top = this.state.top;\n\n      if (this.state.movementType === MOVEMENT_TYPES.UP) {\n        top -= 1;\n      } else if (this.state.movementType === MOVEMENT_TYPES.UP) {\n        top += 1;\n      }\n\n      top += randBetween(-1, 1);\n\n      if (top < 0) {\n        top = this.props.height;\n      } else if (top > this.props.height) {\n        top = 0;\n      }\n\n      this.setState({ top });\n    }, this.speed);\n\n    if (randBetween(0, 5) > 2) {\n      this.addInterval(this.blink.bind(this), 100, 5000);\n    }\n\n    this.addInterval(() => {\n      this.setState({\n        glitchStyle: this.getGlitchStyle()\n      });\n    }, 3000, 10000);\n  }\n\n  componentWillUnmount() {\n    this.intervals.forEach(clearInterval);\n  }\n\n  blink() {\n    this.setState({ showing: false });\n    setTimeout(() => {\n      this.setState({ showing: true });\n    }, 50);\n  }\n\n  getGlitchStyle() {\n    const types = [{\n      background: \"url(https://i.stack.imgur.com/sIIwU.gif)\",\n      opacity: 0.3\n    }, {\n      backdropFilter: \"invert(1)\"\n    }, {\n      backdropFilter: \"blur(10px)\"\n    }, {\n      backdropFilter: \"hue-rotate(120deg)\"\n    }, {\n      backdropFilter: \"hue-rotate(10deg)\"\n    }, {\n      backdropFilter: \"saturate(1.8)\"\n    }];\n    return types[randBetween(0, types.length - 1)];\n  }\n\n  getStyles() {\n    const styles = {\n      display: (this.state.showing) ? \"block\" : \"none\",\n      height: `${this.state.height}px`,\n      top: `${this.state.top}px`,\n      left: 0,\n      right: 0,\n      ...this.state.glitchStyle\n    }\n    return styles;\n  }\n\n  render() {\n    const styles = this.getStyles();\n    return (<div\n      className=\"glitch\"\n      style={styles}\n    ></div>);\n  }\n}\n\nGlitch.propTypes = {\n  height: PropTypes.number.isRequired,\n};\n\n\nclass Glitched extends PureComponent {\n\n  getGlitches() {\n    let glitches = this.props.numGlitches;\n    const els = [];\n    while (glitches--) {\n      els.push(<Glitch key={glitches} height={this.props.height} />);\n    }\n    return els;\n  }\n\n  render() {\n\n    const imageSrc = `https://picsum.photos/${this.props.width}/${this.props.height}`;\n    return (\n      <div className=\"glitched\" >\n        <img alt=\"A random photo, with visual glitch effects applied in CSS\" src={imageSrc} />\n        {this.getGlitches()}\n      </div>\n    );\n  }\n}\n\nGlitched.propTypes = {\n  numGlitches: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nGlitched.defaultProps = {\n  numGlitches: 10,\n  width: 500,\n  height: 500\n};\n\nexport default Glitched;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Glitched from './Glitch';\n\nReactDOM.render(<Glitched />, document.getElementById('root'));\n"],"sourceRoot":""}